<?php
/**
 * creates menu items in admin/config for the module.
 *
 * @return $items
 */
function mal_importer_extras_menu(){
    $items['admin/config/mal'] = array(
        'title' => 'MAL Importer',
        'description' => 'Import additional info from MAL',
        'position' => 'right',
        'weight'=> 10,
        'access arguments' => array('administer site configuration'),
        'page callback' => 'system_admin_menu_block_page',

    );
    $items['admin/config/mal/anime'] = array(
        'title' => 'MAL Anime Updater',
        'description' => 'Import additional info from MAL',
        'page callback' => 'drupal_get_form',
        'page arguments' => array('mal_importer_extras_anime_import'),
        'access arguments' => array('administer site configuration'),


    );
return $items;
}

/**
 *
 * TODO create form page to allow update function to work.
 *
 * @return array
 */
function mal_importer_extras_anime_import(){
    $form= array();

    $form['update_data'] = array(
        '#type' => 'button',
        '#value'=> 'UPDATE',
        '#submit' => 'mal_importer_extras_anime_import_submit',
    );

    $form['#submit'][] = 'mal_importer_extras_anime_import_submit';
    mal_importer_extras_anime_import_submit();
   return $form;

}

/**
 * Submit Handler.
 *
 * Purpose is to load all anime nodes.  It will then query Myanimelist.net to grab the image and synopsis of the associated anime.
 *
 * PENDING FIX FROM MAL API
 * TODO Add Manga Support
 */
function mal_importer_extras_anime_import_submit()
{
    drupal_set_message(t('Animu Pictures and Synopsis Imported.'));

    //Load all Anime Nodes
    //Possibly add check if it has no image or body before importing to reduce slamming mal
    $nodes = node_load_multiple(array(), array('type' => 'anime'));

    //Iterate though the anime nodes
    foreach ($nodes as $node) {
        //Curl function to grab data from MAL
        //Unfortunatelly you can only do search and no lookup by ID maybe ANDIB has a better api?
        $ch = curl_init();
        $xml_query = 'http://myanimelist.net/api/anime/search.xml?q=' . $node->title;
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_URL, $xml_query);
        curl_setopt($ch, CURLOPT_USERPWD, 'RoragokAPI' . ':' . 'thingsapi');
        $result = curl_exec($ch);
        curl_close($ch);

        //Load response as an xml

        if (!empty($result)) {
            $xml = simplexml_load_string(($result));
            //Since we can only search we need to iterate though each response and find the one that matches our ID
            foreach ($xml->entry as $entry) {
                if ($entry->id == $node->field_anime_id['und'][0]['value']) {
                     mal_importer_extras_build_node($node, $entry);

                }
            }
        }
    }

}

/**
 * Purpose of this function is to just save the file to our local storage and add its FID to the node
 *
 * It will also port over the synosis as the body.
 *
 *
 * @param $node - node object to update values
 * @param $entry - XML of data to add to node
 * @throws Exception - i cry everytime
 */
function mal_importer_extras_build_node($node,$entry){
    if($entry->image) {
        $file = system_retrieve_file($entry->image, 'public://anime/', TRUE, FILE_EXISTS_REPLACE);
        $file->display = 1;

        $node->field_picture['und'][0] = (array)$file;

    }

    $node->body['und'][0]['value'] = $entry->synopsis;
    $node->body['und'][0]['format'] ='full_html';
     node_save($node);
}
?>
